{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// Memo: 元々ある snippet を上書き。改行が入らないようにする。
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');$0",
		],
		"description": "Log output to console"
	},

	"Print 1": {
		"prefix": "logx",
		"body": [
			// Memo: Symbol の値を正しく表示するためには明示的な `String()` が必要。(備考: JSON.stringify($1)})
			"console.log(`$1: ${String($1)}`);$0",
		],
		"description": "Log output to console"
	},

	// Memo: Symbol, Map の値を表示する用途では使えない
	// - `JSON.stringify(Symbol('foo'))` は undefined を返す
	// - `let map = new Map([['key1', 'value1'], ['key2', 'value2']]); JSON.stringify(map);` は "{}" を返す
	"Print 2": {
		"prefix": "logjson",
		"body": [
			"console.log(`$1: ${JSON.stringify($1)}`);$0",
		],
		"description": "Log output to console"
	},

	"Clone 1": {
		"prefix": "clone_by_json",
		"body": [
			"JSON.parse(JSON.stringify($1))",
		],
		"description": "Log output to console"
	},
}
